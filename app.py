from flask import Flask, request
import telegram
import os
from datetime import datetime
import threading

app = Flask(__name__)

TOKEN = os.getenv('TOKEN')
bot = telegram.Bot(token=TOKEN)

def send_message_sync(chat_id, text):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        import asyncio
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(bot.send_message(chat_id=chat_id, text=text, disable_notification=True))
        loop.close()
    except Exception as e:
        print(f"Error sending message: {e}")

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        update = telegram.Update.de_json(request.get_json(force=True), bot)
        if update.message:
            message_text = update.message.text.lower()
            chat_id = update.message.chat_id
            user_name = update.message.from_user.first_name or "–ö–ª–∏–µ–Ω—Ç"
            original_text = update.message.text
            
            # –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
            if any(word in message_text for word in ['/start', '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–¥–æ–±—Ä—ã–π']):
                reply = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}! üëã\n\n–Ø –±–æ—Ç RCC Lines –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä—É–∏–∑–æ–≤.\n\nüìã –ö–æ–º–∞–Ω–¥—ã:\n‚Ä¢ '–∑–∞–∫–∞–∑' - –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫—Ä—É–∏–∑\n‚Ä¢ '—Ü–µ–Ω—ã' - —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å\n‚Ä¢ '–∫—Ä—É–∏–∑—ã' - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã\n‚Ä¢ '–∫–æ–Ω—Ç–∞–∫—Ç—ã' - —Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"
            
            elif any(word in message_text for word in ['–∑–∞–∫–∞–∑', '–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', 'cruise', '–±—Ä–æ–Ω—å']):
                order_id = f"#{chat_id}{datetime.now().strftime('%H%M')}"
                reply = f"‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, {user_name}!\n\nüìã –í–∞—à –∑–∞–ø—Ä–æ—Å: '{original_text}'\nüé´ –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {order_id}\n\nüìû –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç."
            
            elif any(word in message_text for word in ['–∫—Ä—É–∏–∑', '–º–∞—Ä—à—Ä—É—Ç', '–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è']):
                reply = "üö¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫—Ä—É–∏–∑—ã RCC Lines:\n\n1Ô∏è‚É£ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—å–µ (7 –¥–Ω–µ–π) - –æ—Ç 890‚Ç¨\n2Ô∏è‚É£ –ö–∞—Ä–∏–±—ã (10 –¥–Ω–µ–π) - –æ—Ç 1200$\n3Ô∏è‚É£ –ù–æ—Ä–≤–µ–∂—Å–∫–∏–µ —Ñ—å–æ—Ä–¥—ã (5 –¥–Ω–µ–π) - –æ—Ç 750‚Ç¨\n4Ô∏è‚É£ –í–æ–ª–≥–∞ (3 –¥–Ω—è) - –æ—Ç 15000‚ÇΩ"
            
            elif any(word in message_text for word in ['—Ü–µ–Ω', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '—Å–∫–æ–ª—å–∫–æ', '–ø—Ä–∞–π—Å']):
                reply = "üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã:\n\nüåä –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—å–µ: 890-2500‚Ç¨\nüèùÔ∏è –ö–∞—Ä–∏–±—ã: 1200-3500$\nüèîÔ∏è –ù–æ—Ä–≤–µ–≥–∏—è: 750-2200‚Ç¨\nüõ•Ô∏è –í–æ–ª–≥–∞: 15000-45000‚ÇΩ"
            
            elif any(word in message_text for word in ['–∫–æ–Ω—Ç–∞–∫—Ç', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–º–µ–Ω–µ–¥–∂–µ—Ä', '—Å–≤—è–∑—å']):
                reply = "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã RCC Lines:\n\n‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: +7 (800) 555-35-35\nüìß Email: info@rcclines.com\nüïò –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 9:00-21:00 –ú–°–ö"
            
            else:
                reply = f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, {user_name}! üì®\n\n–í–∞—à –∑–∞–ø—Ä–æ—Å: '{original_text}'\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: '–∑–∞–∫–∞–∑', '—Ü–µ–Ω—ã', '–∫—Ä—É–∏–∑—ã', '–∫–æ–Ω—Ç–∞–∫—Ç—ã'"
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            thread = threading.Thread(target=send_message_sync, args=(chat_id, reply))
            thread.start()
            
    except Exception as e:
        print(f"Webhook error: {e}")
    
    return 'ok', 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)